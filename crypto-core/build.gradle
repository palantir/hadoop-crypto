apply from: "${rootDir}/gradle/openssl.gradle"

dependencies {
    compile project(':crypto-keys')

    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "com.google.guava:guava"
    compile "com.palantir.seek-io:seek-io"
    compile "org.apache.commons:commons-crypto"
    compile "org.slf4j:slf4j-api"

    processor 'org.openjdk.jmh:jmh-generator-annprocess'

    testCompile "junit:junit"
    testCompile "org.assertj:assertj-core"
    testCompile "org.mockito:mockito-core"
    testCompile 'org.openjdk.jmh:jmh-core'
}

project.task(type: JavaExec, 'benchmarks') {
    main = 'org.openjdk.jmh.Main'
    classpath = sourceSets.main.runtimeClasspath
    maxHeapSize = '1024m'
    // add jvm args with `jvmArgs <arg>`

    if (project.hasProperty('jmh')) {
        args(project.jmh.split(' '))
    } else {
        //args '-h' // help output
        //args '-prof' // profilers
        //args 'HS_GC' // HotSpot (tm) memory manager (GC) profiling via implementation-specific MBeans
        //args 'HS_RT' // HotSpot (tm) runtime profiling via implementation-specific MBeans
        //args 'HS_THR' // HotSpot (tm) threading subsystem via implementation-specific MBeans
        //args 'HS_COMP' // HotSpot (tm) JIT compiler profiling via implementation-specific MBeans
        //args 'HS_CL' // HotSpot (tm) classloader profiling via implementation-specific MBeans
        //args 'STACK' // Simple and naive Java stack profiler
    }
}
